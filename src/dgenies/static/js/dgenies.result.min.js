if(!dgenies){throw"dgenies wasn't included!"}dgenies.result={};// GLOBAL VARIABLES:
dgenies.result.id_res=null;/**
 * Initialise app for result app
 *
 * @param {string} id_res job id
 */dgenies.result.init=function(id_res){dgenies.result.id_res=id_res;dgenies.result.add_to_list();d3.dgenies.init()};/**
 * Update list of results from cookie
 */dgenies.result.add_to_list=function(){let cookies=$.cookie("results");cookies=cookies!==undefined?cookies.split("|"):[];if(cookies.indexOf(dgenies.result.id_res)===-1){cookies.splice(0,0,dgenies.result.id_res);dgenies.save_cookies(cookies);dgenies.update_results(cookies)}};/**
 * Remove a job in cookie
 * @param {string} job job id to remove
 */dgenies.result.remove_job_from_cookie=function(job){let cookies=$.cookie("results");cookies=cookies!==undefined?cookies.split("|"):[];let index=cookies.indexOf(job);let need_update=false;if(index>-1){need_update=true;cookies.splice(index,1)}$.cookie("results",cookies.join("|"),{path:"/"});if(need_update){dgenies.update_results(cookies)}};
if(!dgenies||!dgenies.result){throw"dgenies.result wasn't included!"}dgenies.result.controls={};/**
 * Initialise controls of the result page
 */dgenies.result.controls.init=function(){$("#sort-contigs").click(dgenies.result.controls.launch_sort_contigs);$("#reset-sort").click(dgenies.result.controls.reset_sort_contig);$("#hide-noise").click(dgenies.result.controls.launch_hide_noise);$("#summary").click(dgenies.result.controls.summary);$("#delete-job").click(dgenies.result.controls.delete_job);$("form#select-zone input.submit").click(dgenies.result.controls.select_zone);$("form#export select").change(dgenies.result.export.export)};/**
 * Build summary
 */dgenies.result.controls.summary=function(){dgenies.show_loading("Building...");window.setTimeout(()=>{dgenies.post(`/summary/${dgenies.result.id_res}`,{},function(data){dgenies.hide_loading();if(data["success"]){if(data["status"]==="done"){dgenies.result.summary.show(data["percents"])}else if(data["status"]==="waiting"){dgenies.result.controls.summary()}}else{dgenies.notify(data["message"]||"An error occurred! Please contact us to report the bug","danger")}})},0)};/**
 * Build contigs sort
 */dgenies.result.controls.launch_sort_contigs=function(){d3.dgenies.zoom.reset_scale();window.setTimeout(()=>{dgenies.show_loading("Building...");window.setTimeout(()=>{dgenies.post(`/sort/${dgenies.result.id_res}`,{},function(data){if(data["success"]){dgenies.reset_loading_message();window.setTimeout(()=>{d3.dgenies.launch(data,true)},0)}else{dgenies.hide_loading();dgenies.notify(data["message"]||"An error occurred! Please contact us to report the bug","danger")}})},0)},0)};/**
 * Reset contigs sort
 */dgenies.result.controls.reset_sort_contig=function(){d3.dgenies.zoom.reset_scale();window.setTimeout(()=>{dgenies.show_loading("Building...");window.setTimeout(()=>{dgenies.post(`/reset-sort/${dgenies.result.id_res}`,{},function(data){if(data["success"]){dgenies.reset_loading_message();window.setTimeout(()=>{d3.dgenies.launch(data,true)},0)}else{dgenies.hide_loading();dgenies.notify(data["message"]||"An error occurred! Please contact us to report the bug","danger")}})},0)},0)};/**
 * Build reverse of a contig
 */dgenies.result.controls.launch_reverse_contig=function(){if(d3.dgenies.query_selected!==null){d3.dgenies.zoom.reset_scale();window.setTimeout(()=>{dgenies.show_loading("Building...");window.setTimeout(()=>{dgenies.post(`/reverse-contig/${dgenies.result.id_res}`,{"contig":d3.dgenies.query_selected},function(data){if(data["success"]){dgenies.reset_loading_message();window.setTimeout(()=>{d3.dgenies.launch(data,true)},0)}else{dgenies.hide_loading();dgenies.notify(data["message"]||"An error occurred! Please contact us to report the bug","danger")}})},0)},0)}else{dgenies.notify("Error: no query selected. Please contact us to report the bug","danger")}};/**
 * Hide noise
 */dgenies.result.controls.launch_hide_noise=function(){d3.dgenies.zoom.reset_scale();window.setTimeout(()=>{dgenies.show_loading("Building...");window.setTimeout(()=>{dgenies.post(`/freenoise/${dgenies.result.id_res}`,{noise:dgenies.noise?0:1},function(data){if(data["success"]){dgenies.noise=!dgenies.noise;dgenies.reset_loading_message();window.setTimeout(()=>{d3.dgenies.launch(data,true,true)},0)}else{dgenies.hide_loading();dgenies.notify(data["message"]||"An error occurred! Please contact us to report the bug","danger")}})},0)},0)};/**
 * Select zone with select boxes
 */dgenies.result.controls.select_zone=function(){let contig_select=$("#select-contig").find(":selected");let target_select=$("#select-target").find(":selected");if(contig_select.val()!=="###NONE###"&&target_select.val()!=="###NONE###"){d3.dgenies.select_zone(null,null,target_select.val(),contig_select.val(),true)}else{dgenies.notify("Please select zones into zoom!","danger",2000)}};/**
 * Delete current job (confirmed)
 */dgenies.result.controls.do_delete_job=function(){dgenies.post(`/delete/${dgenies.result.id_res}`,{},function(data){if(data["success"]){dgenies.notify("Your job has been deleted!","success",1500);window.setTimeout(()=>{dgenies.result.remove_job_from_cookie(dgenies.result.id_res);window.location="/"},1500)}else{dgenies.notify("error"in data?data["error"]:"An error has occurred. Please contact the support","danger")}})};/**
 * Ask confirm for delete current job
 */dgenies.result.controls.delete_job=function(){let dialog=$("<div>").attr("id","dialog-confirm").attr("title","Delete job?");let icon=$("<span>").attr("class","ui-icon ui-icon-help").css("float","left").css("margin","12px 12px 20px 0");let body=$("<p>");body.append(icon);body.append("Confirm deletion of this job? This operation is definitive.");dialog.append(body);dialog.dialog({resizable:false,height:"auto",width:500,modal:true,buttons:{"Yes":function(){$(this).dialog("close");dgenies.result.controls.do_delete_job()},"No":function(){$(this).dialog("close")}}})};
if(!dgenies||!dgenies.result){throw"dgenies.result wasn't included!"}dgenies.result.export={};/**
 * Build SVG tag and content
 *
 * @param {string} width svg width size (with unit [px])
 * @returns {string} svg tag and content
 */dgenies.result.export.get_svg=function(width="5000px"){return`<svg version='1.1' xmlns='http://www.w3.org/2000/svg' width='${width}' height='${width}' viewBox='0 0 100 100'>${$("#draw-in").find(">svg").html()}</svg>`};/**
 * Save file
 * @param {Blob} blob file content to save
 * @param {string} format file format
 */dgenies.result.export.save_file=function(blob,format){dgenies.hide_loading();saveAs(blob,`map_${d3.dgenies.name_y}_to_${d3.dgenies.name_x}.${format}`)};/**
 * Export dot plot as PNG
 */dgenies.result.export.export_png=function(){dgenies.show_loading("Building picture...",210);window.setTimeout(()=>{let export_div=$("div#export-pict");export_div.html("").append($("<canvas>"));canvg(export_div.find("canvas")[0],dgenies.result.export.get_svg());let canvas=export_div.find("canvas")[0];canvas.toBlob(function(blob){dgenies.result.export.save_file(blob,"png");export_div.html("")},"image/png")},0)};/**
 * Export dot plot as SVG
 */dgenies.result.export.export_svg=function(){dgenies.show_loading("Building picture...",180);window.setTimeout(()=>{let svg="<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" "+"\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">";svg+=dgenies.result.export.get_svg("1000px");let blob=new Blob([svg],{type:"image/svg+xml"});//d3.dgenies.zoom.restore_scale(transform);
dgenies.result.export.save_file(blob,"svg")},0)};/**
 * Download PAF alignment file
 */dgenies.result.export.export_paf=function(){let export_div=$("div#export-pict");export_div.html("");export_div.append($("<a>").attr("href",`/paf/${dgenies.result.id_res}`).attr("download",`map_${d3.dgenies.name_y}_to_${d3.dgenies.name_x}.paf`).attr("id","my-download").text("download"));dgenies.hide_loading();document.getElementById("my-download").click()};/**
 * Download query fasta file
 * @param {boolean} gzip if true, gzip the file
 */dgenies.result.export.dl_fasta=function(gzip=false){let export_div=$("div#export-pict");export_div.html("");export_div.append($("<a>").attr("href",`/fasta-query/${dgenies.result.id_res}`).attr("download",d3.dgenies.name_y+(gzip?".fasta.gz":".fasta")).attr("id","my-download").text("download"));dgenies.hide_loading();document.getElementById("my-download").click()};/**
 * Export fasta file
 * @param {boolean} compress if true compress (gzip) the file
 */dgenies.result.export.export_fasta=function(compress=false){dgenies.show_loading("Building file...",180);dgenies.post("/get-fasta-query/"+dgenies.result.id_res,{gzip:compress},function(data,success){if(data["status"]===0){window.setTimeout(()=>{dgenies.result.export.export_fasta()},10000)}else if(data["status"]===2){dgenies.result.export.dl_fasta(data["gzip"])}else if(data["status"]===1){dgenies.hide_loading();dgenies.notify("We are building your Fasta file. You will receive by mail a link to download it soon!","info")}else{dgenies.hide_loading();dgenies.notify("An error has occurred. Please contact us to report the bug","danger")}})};/**
 * Download log file
 * @param {boolean} gzip if true, gzip the file
 */dgenies.result.export.dl_logs=function(){let export_div=$("div#export-pict");export_div.html("");export_div.append($("<a>").attr("href",`/logs/${dgenies.result.id_res}`).attr("download",d3.dgenies.name_y+".logs.txt").attr("id","my-download").text("download"));dgenies.hide_loading();document.getElementById("my-download").click()};/**
 * Show export dialog
 */dgenies.result.export.ask_export_fasta=function(){if(dgenies.mode==="webserver"){let dialog=$("<div>").attr("id","dialog-confirm").attr("title","Gzip?");let icon=$("<span>").attr("class","ui-icon ui-icon-help").css("float","left").css("margin","12px 12px 20px 0");let body=$("<p>");body.append(icon);body.append("Compression is recommended on slow connections. Download Gzip file?");dialog.append(body);dialog.dialog({resizable:false,height:"auto",width:500,modal:true,buttons:{"Use default":function(){$(this).dialog("close");dgenies.result.export.export_fasta(false)},"Use Gzip":function(){$(this).dialog("close");dgenies.result.export.export_fasta(true)},Cancel:function(){$(this).dialog("close")}}})}else{dgenies.result.export.export_fasta(false)}};/**
 * Download association table between queries and targets
 */dgenies.result.export.export_association_table=function(){let export_div=$("div#export-pict");export_div.html("");export_div.append($("<a>").attr("href",`/qt-assoc/${dgenies.result.id_res}`).attr("download",d3.dgenies.name_y+"_"+d3.dgenies.name_x+"_assoc.tsv").attr("id","my-download").text("download"));dgenies.hide_loading();document.getElementById("my-download").click()};/**
 * Download backup file of the project
 */dgenies.result.export.export_backup_file=function(){dgenies.show_loading("Building file...",180);window.setTimeout(()=>{let export_div=$("div#export-pict");export_div.html("");export_div.append($("<a>").attr("href",`/backup/${dgenies.result.id_res}`).attr("download",d3.dgenies.name_y+"_"+d3.dgenies.name_x+"_"+dgenies.result.id_res+".tar.gz").attr("id","my-download").text("download"));dgenies.hide_loading();document.getElementById("my-download").click()})};/**
 * Export list of contigs with no association with any target or any query
 * @param {string} to: query or target
 */dgenies.result.export.export_no_association_file=function(to){window.setTimeout(()=>{dgenies.show_loading("Building file...",180);let on=to==="query"?"target":"query";dgenies.post("/no-assoc/"+dgenies.result.id_res,{"to":to},function(data,success){dgenies.hide_loading();if(!data["empty"]){let blob=new Blob([data["file_content"]],{type:"text/plain"});saveAs(blob,`no_${to}_matches_${d3.dgenies.name_y}_to_${d3.dgenies.name_x}.txt`)}else{dgenies.notify(`No contigs in ${to} have None match with any ${on}!`,"success")}})},0)};/**
 * Export query like reference fasta file (webserver mode)
 */dgenies.result.export.export_query_as_reference_fasta_webserver=function(){dgenies.post(`/build-query-as-reference/${dgenies.result.id_res}`,{},function(data,success){if(data["success"]){dgenies.notify("You will receive a mail soon with the link to download your Fasta file","success")}else{dgenies.notify(`An error has occurred. Please contact the support`,"danger")}})};/**
 * Export query like reference fasta file (standalone mode)
 */dgenies.result.export.export_query_as_reference_fasta_standalone=function(){dgenies.show_loading("Building file...",180);window.setTimeout(()=>{dgenies.post(`/build-query-as-reference/${dgenies.result.id_res}`,{},function(data,success){if(data["success"]){let export_div=$("div#export-pict");export_div.html("");export_div.append($("<a>").attr("href",`/get-query-as-reference/${dgenies.result.id_res}`).attr("download",`as_reference_${d3.dgenies.name_y}.fasta`).attr("id","my-download").text("download"));document.getElementById("my-download").click();dgenies.hide_loading()}else{dgenies.notify(`An error has occurred. Please contact the support`,"danger")}})},0)};/**
 * Download offline viewer
 */dgenies.result.export.export_offline_viewer=function(){dgenies.show_loading("Building file...",180);window.setTimeout(()=>{dgenies.post(`/summary/${dgenies.result.id_res}`,{},function(data){dgenies.hide_loading();if(data["success"]){if(data["status"]==="done"){let export_div=$("div#export-pict");export_div.html("");export_div.append($("<a>").attr("href",`/viewer/${dgenies.result.id_res}`).attr("download",d3.dgenies.name_y+"_"+d3.dgenies.name_x+"_"+dgenies.result.id_res+".html").attr("id","my-download").text("download"));dgenies.hide_loading();document.getElementById("my-download").click()}else if(data["status"]==="waiting"){dgenies.result.export.export_offline_viewer()}}else{dgenies.notify(data["message"]||"An error occurred! Please contact us to report the bug","danger")}})},0)};/**
 * Manage exports
 */dgenies.result.export.export=function(){let select=$("form#export select");let selection=parseInt(select.val());window.setTimeout(()=>{if(selection>0){let async=false;if(selection===1){dgenies.result.export.export_svg();async=true}else if(selection===2){dgenies.result.export.export_png();async=true}else if(selection===3)dgenies.result.export.export_paf();else if(selection===4){dgenies.result.export.ask_export_fasta();async=true}else if(selection===5){dgenies.result.export.export_association_table()}else if(selection===6){dgenies.result.export.export_no_association_file("query");async=true}else if(selection===7){dgenies.result.export.export_no_association_file("target");async=true}else if(selection===8){if(dgenies.mode==="webserver"){dgenies.result.export.export_query_as_reference_fasta_webserver()}else{dgenies.result.export.export_query_as_reference_fasta_standalone();async=true}}else if(selection===9){dgenies.result.export.export_backup_file();async=true}else if(selection===10){dgenies.result.export.export_offline_viewer();async=true}else if(selection===11){dgenies.result.export.dl_logs();async=true}else dgenies.notify("Not supported yet!","danger",2000);if(!async)dgenies.hide_loading();select.val("0")}},0)};
if(!dgenies||!dgenies.result){throw"dgenies.result wasn't included!"}dgenies.result.summary={};dgenies.result.summary.percents={};/**
 * Show summary window
 * @param {object} percents: percents for each identity category
 */dgenies.result.summary.show=function(percents){dgenies.result.summary.percents=percents;let svgcontainer=d3.select("#draw-stats").html("").append("svg:svg").attr("width","500px").attr("height","220px");let container=svgcontainer.append("svg:g");let percents_order=["-1","0","1","2","3"];let x=0;let percent_value=0;$.each(percents_order,function(i,percent){let label=dgenies.result.summary._get_label(percent);x+=percent_value;percent_value=percent in percents?percents[percent]:0;container.append("rect").attr("x",x+"%").attr("y",0).attr("width",percent_value+"%").attr("height","50px").attr("stroke","none").attr("fill",d3.dgenies.color_idy[d3.dgenies.color_idy_theme][percent]);container.append("rect").attr("x",5).attr("y",70+i*30).attr("width","10px").attr("height","10px").attr("fill",d3.dgenies.color_idy[d3.dgenies.color_idy_theme][percent]).style("stroke","#000").style("stroke-width","1px");container.append("text").attr("x",30).attr("y",82+i*30).attr("font-family","sans-serif").attr("font-size","12pt").text(label+":");container.append("text").attr("x",110).attr("y",82+i*30).attr("font-family","sans-serif").attr("font-size","12pt").text(percent_value.toFixed(2)+" %")});container.append("rect").attr("x",0).attr("y",0).attr("width","100%").attr("height","50px").style("stroke","#000").style("fill","none").style("stroke-width","1px");$("#modal-stats").dialog({title:"Summary of identity",width:"560px",buttons:[{text:"Export TSV",click:dgenies.result.summary.export_tsv},{text:"Export PNG",click:dgenies.result.summary.export_png},{text:"Export SVG",click:dgenies.result.summary.export_svg},{text:"Close",click:function(){$(this).dialog("close")},default:true}],open:function(){$(this).parents().find(".ui-dialog-buttonpane button")[3].focus()}})};/**
 * Get label of the percent class
 *
 * @param {string} percent_class percent class
 * @returns {string} percent class label
 * @private
 */dgenies.result.summary._get_label=function(percent_class){switch(percent_class){case"-1":return"No match";case"0":return"< 25 %";case"1":return"< 50 %";case"2":return"< 75 %";case"3":return"> 75 %";}};/**
 * Get SVG picture of the summary
 *
 * @returns {string} svg picture
 */dgenies.result.summary.get_svg=function(){return`<svg version='1.1' xmlns='http://www.w3.org/2000/svg' width='500px' height='220px'>${$("#draw-stats").find(">svg").html()}</svg>`};/**
 * Save to a file
 *
 * @param blob data to save
 * @param {string} format file format
 */dgenies.result.summary.save_file=function(blob,format){saveAs(blob,`summary_${d3.dgenies.name_y}_to_${d3.dgenies.name_x}.${format}`)};/**
 * Export summary to tsv
 */dgenies.result.summary.export_tsv=function(){let content="category\tpercent\n";for(let percent in dgenies.result.summary.percents){content+=`${dgenies.result.summary._get_label(percent)}\t${dgenies.result.summary.percents[percent]}\n`}dgenies.result.summary.save_file(new Blob([content],{type:"plain/text"}),"tsv")};/**
 * Export summary to svg
 */dgenies.result.summary.export_svg=function(){let svg="<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" "+"\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">";svg+=dgenies.result.summary.get_svg();let blob=new Blob([svg],{type:"image/svg+xml"});dgenies.result.summary.save_file(blob,"svg")};/**
 * Export summary to png
 */dgenies.result.summary.export_png=function(){let export_div=$("div#export-pict");export_div.html("").append($("<canvas>"));canvg(export_div.find("canvas")[0],dgenies.result.summary.get_svg());let canvas=export_div.find("canvas")[0];canvas.toBlob(function(blob){dgenies.result.summary.save_file(blob,"png");export_div.html("")},"image/png")};
if(!d3){throw"d3 wasn't included!"}d3.dgenies={};//GLOBAL VARIABLES:
d3.dgenies.svgcontainer=null;d3.dgenies.container=null;d3.dgenies.svgsupercontainer=null;d3.dgenies.name_x=null;d3.dgenies.name_y=null;d3.dgenies.lines=null;d3.dgenies.x_len=null;d3.dgenies.y_len=null;d3.dgenies.x_zones=null;d3.dgenies.y_zones=null;d3.dgenies.zoom_enabled=true;d3.dgenies.all_disabled=false;d3.dgenies.min_idy=0;d3.dgenies.max_idy=0;d3.dgenies.zone_selected=false;d3.dgenies.query_selected=null;//For translations:
d3.dgenies.translate_start=null;d3.dgenies.posX=null;d3.dgenies.posY=null;d3.dgenies.old_translate=null;//Graphical parameters:
d3.dgenies.scale=1000;d3.dgenies.content_lines_width=d3.dgenies.scale/400;d3.dgenies.break_lines_width=d3.dgenies.scale/1500;d3.dgenies.color_idy_theme="default";d3.dgenies.color_idy_themes=["default","colorblind","black&white","r_default","r_colorblind","allblack"];d3.dgenies.color_idy={"default":{"3":"#094b09","2":"#2ebd40","1":"#d5670b","0":"#ffd84b","-1":"#fff"},"colorblind":{"3":"#000","2":"#006DDB","1":"#DB6E00","0":"#FFB677","-1":"#fff"},"black&white":{"3":"#000","2":"#626262","1":"#9c9c9c","0":"#DDDCDC","-1":"#fff"},"r_default":{"3":"#7fff65","2":"#238d31","1":"#78410d","0":"#3b080a","-1":"#fff"},"r_colorblind":{"3":"#8c8c8c","2":"#006DDB","1":"#783c00","0":"#312515","-1":"#fff"},"allblack":{"3":"#000","2":"#000","1":"#000","0":"#000","-1":"#fff"}};d3.dgenies.limit_idy=null;d3.dgenies.min_idy_draw=0;d3.dgenies.min_size=0;d3.dgenies.linecap="round";d3.dgenies.background_axis="#f4f4f4";d3.dgenies.break_lines_color="#7c7c7c";d3.dgenies.break_lines_dash="3, 3";d3.dgenies.break_lines_show=true;d3.dgenies.zoom_scale_lines=1;// Zoom scale used for lines width
d3.dgenies.tick_width=0.5;d3.dgenies.color_mixes="#969696";//Filter sizes:
d3.dgenies.min_sizes=[0,0.01,0.02,0.03,0.05,1,2];//Help pictures:
d3.dgenies.help_zoom="/static/images/ctrl_plus_mouse.png";d3.dgenies.help_trans="/static/images/ctrl_plus_click.png";/**
 * Initialize dotplot
 *
 * @param {string} id_res job id
 * @param {boolean} from_file true to load data from a file (default: false, load from server)
 */d3.dgenies.init=function(id_res=null,from_file=false){if(id_res===null){id_res=dgenies.result.id_res}$("#form-parameters")[0].reset();$("form#select-zone")[0].reset();if(!from_file){dgenies.post("/get_graph",{"id":id_res},function(data){if(data["success"]){d3.dgenies.launch(data)}else{$("#supdraw").html($("<p>").html("message"in data?data["message"]:"This job does not exist!").css("margin-top","15px"));dgenies.result.remove_job_from_cookie(dgenies.result.id_res)}})}else{dgenies.get(id_res,{},function(data){d3.dgenies.launch(data)})}};/**
 * Launch draw of dot plot
 *
 * @param {string} res
 * @param {boolean} update if true, just update the existing dot plot (don't initialize events)
 * @param {boolean} noise_change if false, set noise to true
 */d3.dgenies.launch=function(res,update=false,noise_change=false){dgenies.fill_select_zones(res["x_order"],res["y_order"]);if(res["sorted"]){$("button#sort-contigs").text("Undo sort");$("#export").find("select option[value=4]").show();$("#export").find("select option[value=8]").show()}else{$("button#sort-contigs").text("Sort contigs");$("#export").find("select option[value=4]").hide();$("#export").find("select option[value=8]").hide()}d3.dgenies.name_x=res["name_x"];d3.dgenies.name_y=res["name_y"];if(d3.dgenies.name_x===d3.dgenies.name_y){$("button#sort-contigs").parent().hide()}else{$("button#sort-contigs").parent().show()}d3.dgenies.lines=res["lines"];d3.dgenies.x_len=res["x_len"];d3.dgenies.y_len=res["y_len"];d3.dgenies.min_idy=res["min_idy"];d3.dgenies.max_idy=res["max_idy"];d3.dgenies.limit_idy=res["limit_idy"];if(!noise_change){dgenies.noise=true}$("#hide-noise").val(dgenies.noise?"Hide noise":"Show noise");d3.dgenies.draw(res["x_contigs"],res["x_order"],res["y_contigs"],res["y_order"]);if(!update){$("div#draw").resizable({aspectRatio:true});d3.dgenies.events.init();dgenies.result.controls.init()}if(res["sampled"]){let max_nb_lines=dgenies.numberWithCommas(res["max_nb_lines"].toString());dgenies.notify(`<div style="text-align: center"><b>There are too much matches.\nOnly the ${max_nb_lines} best matches are displayed</b></div>`)}d3.dgenies.mousetip.init()};/**
 * Find target chromosome where the user click
 *
 * @param {float} x coordinate on X axis
 * @returns {string|null} chromosome name
 */d3.dgenies.select_target=function(x){for(let zone in d3.dgenies.x_zones){if(d3.dgenies.x_zones[zone][0]<x&&x<=d3.dgenies.x_zones[zone][1]){return zone}}return null};/**
 * Find query contig where the user click
 *
 * @param {float} y coordinate on Y axis
 * @returns {string|null} contig name
 */d3.dgenies.select_query=function(y){for(let zone in d3.dgenies.y_zones){if(d3.dgenies.y_zones[zone][0]<y&&y<=d3.dgenies.y_zones[zone][1]){return zone}}return null};/**
 * Find zone (query contig and target chromosome) based on coordinates
 *
 * @param {float} x coordinate on X axis
 * @param {float} y coordinate on Y axis
 * @param {string} x_zone selected chromosome on X axis (target)
 * @param {string} y_zone selected contig on Y axis (query)
 * @param {boolean} force if true, select zone even if a zone is already selected
 */d3.dgenies.select_zone=function(x=null,y=null,x_zone=null,y_zone=null,force=false){d3.dgenies.mousetip.hide();dgenies.show_loading();window.setTimeout(()=>{if(!d3.dgenies.zone_selected||force){if(x_zone===null){//Search zone for X axis:
x_zone=d3.dgenies.select_target(x)}if(y_zone===null){//Search zone for Y axis:
y_zone=d3.dgenies.select_query(y)}d3.dgenies.zone_selected=[x_zone,y_zone];//Compute X and Y scales to zoom into zone:
let x_len_zone=d3.dgenies.x_zones[x_zone][1]-d3.dgenies.x_zones[x_zone][0];let y_len_zone=d3.dgenies.y_zones[y_zone][1]-d3.dgenies.y_zones[y_zone][0];let scale_x=d3.dgenies.scale/x_len_zone;let scale_y=d3.dgenies.scale/y_len_zone;//Zoom in:
d3.dgenies.container.attr("transform","scale("+scale_x+","+scale_y+")"+"translate(-"+d3.dgenies.x_zones[x_zone][0]+",-"+(d3.dgenies.scale-d3.dgenies.y_zones[y_zone][1])+")");// Correct lines stroke width to be not impacted by the zoom:
d3.selectAll(".content-lines").attr("stroke-width",d3.dgenies.content_lines_width/Math.min(scale_x,scale_y));d3.dgenies.zoom_scale_lines=Math.min(scale_x,scale_y);d3.selectAll("line.break-lines").style("visibility","hidden");//Update left and bottom axis:
let y_max=d3.dgenies.y_zones[y_zone][1]/d3.dgenies.scale*d3.dgenies.y_len;let y_min=d3.dgenies.y_zones[y_zone][0]/d3.dgenies.scale*d3.dgenies.y_len;d3.dgenies.draw_left_axis(y_max-y_min,0);let x_max=d3.dgenies.x_zones[x_zone][1]/d3.dgenies.scale*d3.dgenies.x_len;let x_min=d3.dgenies.x_zones[x_zone][0]/d3.dgenies.scale*d3.dgenies.x_len;d3.dgenies.draw_bottom_axis(x_max-x_min,0);//Update top and right axis:
let pseudo_x_zones={};pseudo_x_zones[x_zone]=[0,d3.dgenies.x_len];d3.dgenies.draw_top_axis(pseudo_x_zones);let pseudo_y_zones={};pseudo_y_zones[y_zone]=[0,d3.dgenies.y_len];d3.dgenies.draw_right_axis(pseudo_y_zones);d3.dgenies.zoom_enabled=false}$("#restore-all").show();dgenies.hide_loading()},0)};/**
 * Get human readable size in Kb or Mb for a number in bases
 *
 * @param {int} nbases size in bases
 * @param {int} precision unit to use (auto: select according to number size)
 * @param {string} space space before unit (space or non-breaking space for example)
 * @returns {string} human readable size
 */d3.dgenies.get_human_readable_size=function(nbases,precision=1,space=" "){let lab="";let prec=parseInt("1"+"0".repeat(precision));if(nbases>1000000){lab=(Math.round(nbases/(1000000/prec))/prec).toString()+space+"M"}else if(nbases>1000){lab=(Math.round(nbases/(1000/prec))/prec).toString()+space+"K"}else{lab=Math.round(nbases).toString()}return lab};/**
 * Draw left axis
 *
 * @param {int} y_max max value of y on the Y axis
 * @param {int} y_min min value of y on the Y axis
 */d3.dgenies.draw_left_axis=function(y_max,y_min=0){let axis_length=500;$("svg.left-axis").remove();//Remove previous axis (if any)
let svg_left=d3.dgenies.svgsupercontainer.append("svg:svg").attr("class","axis left-axis").attr("width",5).attr("height",90).attr("x",0).attr("y",5).attr("viewBox","0 0 20 "+axis_length).attr("preserveAspectRatio","none");let container_left=svg_left.append("g").attr("transform","translate(0,"+axis_length+")rotate(-90)");let y_size=y_max-y_min;for(let i=1;i<10;i++){let y=axis_length/10*i;let y_t=y_min+y_size/10*i;if(y_t>=0&&y_t<=d3.dgenies.y_len){let y_lab=d3.dgenies.get_human_readable_size(y_t);container_left.append("line").attr("x1",y).attr("y1",15).attr("x2",y).attr("y2",20).attr("stroke-width",d3.dgenies.tick_width).attr("stroke","black");container_left.append("text").attr("x",y).attr("y",12).attr("text-anchor","middle").attr("font-family","sans-serif").attr("font-size","6.5pt").text(y_lab)}}};/**
 * Draw bottom axis
 *
 * @param {int} x_max max value of x on the X axis
 * @param {int} x_min min value of x on the X axis
 */d3.dgenies.draw_bottom_axis=function(x_max,x_min=0){let axis_length=500;$("svg.bottom-axis").remove();//Remove previous axis (if any)
let svg_bottom=d3.dgenies.svgsupercontainer.append("svg:svg").attr("class","axis bottom-axis").attr("width",90).attr("height",5).attr("x",5).attr("y",95).attr("viewBox","0 0 "+axis_length+" 20").attr("preserveAspectRatio","none");let x_size=x_max-x_min;for(let i=1;i<10;i++){let x=axis_length/10*i;let x_t=x_min+x_size/10*i;if(x_t>=0&&x_t<=d3.dgenies.x_len){let x_lab=d3.dgenies.get_human_readable_size(x_t);svg_bottom.append("line").attr("x1",x).attr("y1",0).attr("x2",x).attr("y2",5).attr("stroke-width",d3.dgenies.tick_width).attr("stroke","black");svg_bottom.append("text").attr("x",x).attr("y",15).attr("text-anchor","middle").attr("font-family","sans-serif").attr("font-size","6.5pt").text(x_lab)}}};/**
 * Zoom on left axis
 */d3.dgenies.zoom_left_axis=function(){let transform=d3.dgenies.container.attr("transform");if(transform===null){transform="translate(0,0)scale(1)"}let tr_regex=/translate\(([^,]+),([^)]+)\)/;let translate=parseFloat(transform.match(tr_regex)[2]);let sc_regex=/scale\(([^,)]+)(,([^)]+))?\)/;let scale=parseFloat(transform.match(sc_regex)[3]!==undefined?transform.match(sc_regex)[3]:transform.match(sc_regex)[1]);let max_y=d3.dgenies.y_len+translate/d3.dgenies.scale*d3.dgenies.y_len/scale;let min_y=max_y-d3.dgenies.y_len/scale;d3.dgenies.draw_left_axis(max_y,min_y)};/**
 * Zoom on bottom axis
 */d3.dgenies.zoom_bottom_axis=function(){let transform=d3.dgenies.container.attr("transform");if(transform===null){transform="translate(0,0)scale(1)"}let tr_regex=/translate\(([^,]+),([^)]+)\)/;let translate=parseFloat(transform.match(tr_regex)[1]);let sc_regex=/scale\(([^,)]+)(,([^)]+))?\)/;let scale=parseFloat(transform.match(sc_regex)[1]);let min_x=-translate/d3.dgenies.scale*d3.dgenies.x_len/scale;let max_x=(d3.dgenies.x_len-translate/d3.dgenies.scale*d3.dgenies.x_len)/scale;d3.dgenies.draw_bottom_axis(max_x,min_x)};/**
 * Draw top axis
 *
 * @param {object} x_zones: name of chromosomes of the target
 */d3.dgenies.draw_top_axis=function(x_zones=d3.dgenies.x_zones){$("svg.top-axis").remove();//Remove previous axis (if any)
let transform=d3.dgenies.container.attr("transform");if(transform===null){transform="translate(0,0)scale(1)"}let tr_regex=/translate\(([^,]+),([^)]+)\)/;let translate=parseFloat(transform.match(tr_regex)[1]);let sc_regex=/scale\(([^,)]+)(,([^)]+))?\)/;let scale=parseFloat(transform.match(sc_regex)[1]);let axis_length=500;let svg_top=d3.dgenies.svgsupercontainer.append("svg:svg").attr("class","top-axis axis").attr("width",90).attr("height",5).attr("x",5).attr("y",0).attr("viewBox","0 0 "+axis_length+" 20").attr("preserveAspectRatio","none");svg_top.append("text").attr("x",axis_length/2).attr("y",7.5).attr("font-size","6pt").attr("font-family","sans-serif").attr("font-style","italic").attr("text-anchor","middle").text(d3.dgenies.name_x);let nb_zone=0;for(let zone in x_zones){let x_pos_1=Math.min(Math.max(x_zones[zone][0]*scale+translate,0),d3.dgenies.scale);let x_pos_2=Math.min(Math.max(x_zones[zone][1]*scale+translate,0),d3.dgenies.scale);let z_len=x_pos_2/d3.dgenies.scale*axis_length-x_pos_1/d3.dgenies.scale*axis_length;if(!zone.startsWith("###MIX###")){//z_middle = (x_zones[zone][1] + x_zones[zone][0]) / 2
let text_container=svg_top.append("svg:svg").attr("x",x_pos_1/d3.dgenies.scale*axis_length).attr("y",0).attr("width",z_len).attr("height","100%");let text=text_container.append("text").attr("x",z_len/2).attr("y",17).attr("text-anchor","middle").attr("font-family","sans-serif").attr("font-size","6pt").text(zone);let zone_txt=zone;let i=4;while(text.node().getComputedTextLength()>z_len&&zone_txt.length>=5){text.remove();zone_txt=zone.slice(0,-i)+"...";text=text_container.append("text").attr("x",z_len/2).attr("y",17).attr("text-anchor","middle").attr("font-family","sans-serif").attr("font-size","6pt").text(zone_txt);i++}if(text.node().getComputedTextLength()>z_len){text.remove()}}if(zone.startsWith("###MIX###")){svg_top.append("rect").attr("x",x_pos_1/d3.dgenies.scale*axis_length).attr("y",12).attr("width",z_len).attr("height",8).attr("fill",d3.dgenies.color_mixes).attr("stroke",d3.dgenies.color_mixes)}else if(nb_zone>0){//Draw zone separator at left of zone (except for first zone)
svg_top.append("line").attr("x1",x_pos_1/d3.dgenies.scale*axis_length).attr("x2",x_pos_1/d3.dgenies.scale*axis_length).attr("y1",12).attr("y2",20).attr("stroke","black").attr("stroke-width",d3.dgenies.tick_width)}nb_zone++}};/**
 * Draw right axis
 *
 * @param {object} y_zones name of contigs of the query
 */d3.dgenies.draw_right_axis=function(y_zones=d3.dgenies.y_zones){$("svg.right-axis").remove();//Remove previous axis (if any)
let transform=d3.dgenies.container.attr("transform");if(transform===null){transform="translate(0,0)scale(1)"}let tr_regex=/translate\(([^,]+),([^)]+)\)/;let translate=parseFloat(transform.match(tr_regex)[2]);let sc_regex=/scale\(([^,)]+)(,([^)]+))?\)/;let scale=parseFloat(transform.match(sc_regex)[3]!==undefined?transform.match(sc_regex)[3]:transform.match(sc_regex)[1]);let axis_length=500;let svg_right=d3.dgenies.svgsupercontainer.append("svg:svg").attr("class","right-axis").attr("width",5).attr("height",90).attr("x",95).attr("y",5).attr("viewBox","0 0 20 "+axis_length).attr("preserveAspectRatio","none");let container_right=svg_right.append("g").attr("transform","translate(20)rotate(90)");container_right.append("text").attr("x",axis_length/2).attr("y",7.5).attr("font-size","6pt").attr("font-family","sans-serif").attr("font-style","italic").attr("text-anchor","middle").text(d3.dgenies.name_y);let nb_zone=Object.keys(y_zones).length-1;for(let zone in y_zones){let y_pos_2=Math.min(Math.max((d3.dgenies.scale-y_zones[zone][0])*scale+translate,0),d3.dgenies.scale);let y_pos_1=Math.min(Math.max((d3.dgenies.scale-y_zones[zone][1])*scale+translate,0),d3.dgenies.scale);let z_len=y_pos_2/d3.dgenies.scale*axis_length-y_pos_1/d3.dgenies.scale*axis_length;if(!zone.startsWith("###MIX###")){//z_middle = (x_zones[zone][1] + x_zones[zone][0]) / 2
let text_container=container_right.append("svg:svg").attr("x",y_pos_1/d3.dgenies.scale*axis_length).attr("y",0).attr("width",z_len).attr("height","100%");let text=text_container.append("text").attr("x",z_len/2).attr("y",17).attr("text-anchor","middle").attr("font-family","sans-serif").attr("font-size","6pt").text(zone);let zone_txt=zone;let i=4;while(text.node().getComputedTextLength()>z_len&&zone_txt.length>=5){text.remove();zone_txt=zone.slice(0,-i)+"...";text=text_container.append("text").attr("x",z_len/2).attr("y",17).attr("text-anchor","middle").attr("font-family","sans-serif").attr("font-size","6pt").text(zone_txt);i++}if(text.node().getComputedTextLength()>z_len){text.remove()}}if(zone.startsWith("###MIX###")){container_right.append("rect").attr("x",y_pos_1/d3.dgenies.scale*axis_length).attr("y",12).attr("width",z_len).attr("height",8).attr("fill",d3.dgenies.color_mixes).attr("stroke","None")}else if(nb_zone>0){//Draw zone separator at left of zone (except for first zone)
container_right.append("line").attr("x1",y_pos_1/d3.dgenies.scale*axis_length).attr("x2",y_pos_1/d3.dgenies.scale*axis_length).attr("y1",12).attr("y2",20).attr("stroke","black").attr("stroke-width",d3.dgenies.tick_width).attr("class","whereis")}nb_zone--}};/**
 * Draw backgrounds of all axis
 */d3.dgenies.draw_axis_bckgd=function(){// Top:
let svg_top=d3.dgenies.svgsupercontainer.append("svg:svg").attr("width",100).attr("height",5).attr("x",0).attr("y",0).attr("viewBox","0 0 100 5").attr("preserveAspectRatio","none");svg_top.append("polygon").attr("points","5,0 95,0 100,5 0,5").attr("stroke","none").style("fill",d3.dgenies.background_axis);// Right:
let svg_right=d3.dgenies.svgsupercontainer.append("svg:svg").attr("width",5).attr("height",100).attr("x",95).attr("y",0).attr("viewBox","0 0 5 100").attr("preserveAspectRatio","none");svg_right.append("polygon").attr("points","0,0 5,5 5,95 0,100").attr("stroke","none").style("fill",d3.dgenies.background_axis);// Bottom:
let svg_bottom=d3.dgenies.svgsupercontainer.append("svg:svg").attr("width",100).attr("height",5).attr("x",0).attr("y",95).attr("viewBox","0 0 100 5").attr("preserveAspectRatio","none");svg_bottom.append("polygon").attr("points","0,0 100,0 95,5 5,5").attr("stroke","none").style("fill",d3.dgenies.background_axis);//Left:
let svg_left=d3.dgenies.svgsupercontainer.append("svg:svg").attr("width",5).attr("height",100).attr("x",0).attr("y",0).attr("viewBox","0 0 5 100").attr("preserveAspectRatio","none");svg_left.append("polygon").attr("points","5,0 5,100 0,95 0,5").attr("stroke",d3.dgenies.background_axis).attr("stroke-width","0px").style("fill",d3.dgenies.background_axis)};/**
 * Sort function key for color identity
 *
 * @param a
 * @param b
 * @returns {number}
 * @private
 */d3.dgenies._sort_color_idy=function(a,b){return parseFloat(b)-parseFloat(a)};/**
 * Draw legend
 */d3.dgenies.draw_legend=function(){d3.select("#legend .draw").html("");//Empty legend
let color_idy=d3.dgenies.color_idy[d3.dgenies.color_idy_theme];let color_idy_len=Object.keys(color_idy).length;let color_idy_order=["3","2","1","0"];let color_idy_labels=[d3.dgenies.limit_idy[2].toString(),d3.dgenies.limit_idy[1].toString(),d3.dgenies.limit_idy[0].toString(),"0"];let svgcontainer=d3.select("#legend .draw").append("svg:svg").attr("width","100%").attr("height","99%");let draw=$("#legend").find(".draw");let draw_w=draw.width();let draw_h=draw.height();let container=svgcontainer.append("g");for(let i=0;i<color_idy_order.length;i++){let color_idy_idx=color_idy_order[i];container.append("rect").attr("x","50%").attr("y",i*(100/color_idy_len)+"%").attr("width","50%").attr("height",100/color_idy_len+"%").attr("stroke","none").attr("fill",color_idy[color_idy_idx]);container.append("text").attr("x","45%").attr("y",i*(100/color_idy_len)+100/color_idy_len-1+"%").attr("text-anchor","end").attr("font-family","sans-serif").attr("font-size","10pt").text(color_idy_labels[i])}container.append("text").attr("x","45%").attr("y",10).attr("text-anchor","end").attr("font-family","sans-serif").attr("font-size","10pt").text("1");container.append("text").attr("x",0).attr("y","50%").attr("text-anchor","middle").attr("transform","translate(-"+(draw_w-20)+","+draw_h/2+")rotate(-90)").attr("font-family","sans-serif").attr("font-size","11.5pt").attr("font-weight","bold").text("Identity")};/**
 * Get length of a given line
 *
 * @param {array} line line object
 * @returns {number} line length
 * @private
 */d3.dgenies._get_line_len=function(line){let x1=line[0]/d3.dgenies.x_len*d3.dgenies.scale;let x2=line[1]/d3.dgenies.x_len*d3.dgenies.scale;let y1=d3.dgenies.scale-line[2]/d3.dgenies.y_len*d3.dgenies.scale;let y2=d3.dgenies.scale-line[3]/d3.dgenies.y_len*d3.dgenies.scale;return Math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2))};/**
 * Sort lines with their length (DESC)
 *
 * @param {array} l1 line object
 * @param {array} l2 line object
 * @returns {number}
 * @private
 */d3.dgenies._sort_lines=function(l1,l2){return d3.dgenies._get_line_len(l2)-d3.dgenies._get_line_len(l1)};/**
 * Sort lines with their identity (DESC)
 *
 * @param {array} l1 line object
 * @param {array} l2 line object
 * @returns {number}
 * @private
 */d3.dgenies._sort_lines_by_idy=function(l1,l2){return l1[4]-l2[4]};/**
 * Build line data for D3.js
 *
 * @param {object} d data object of the line
 * @param {int} min_size min size of line. Beside it, don't draw the line
 * @param {int|null} max_size max size of line. Over it, don't draw the line
 * @param {number} x_len length of x (target)
 * @param {number} y_len length of y (query)
 * @returns {string} path object
 * @private
 */d3.dgenies.__lineFunction=function(d,min_size=0,max_size=null,x_len,y_len){d=d.sort(d3.dgenies._sort_lines_by_idy);let path=[];for(let i=0;i<d.length;i++){let d_i=d[i];let x1=d_i[0]/x_len*d3.dgenies.scale;let x2=d_i[1]/x_len*d3.dgenies.scale;let y1=d3.dgenies.scale-d_i[2]/y_len*d3.dgenies.scale;let y2=d3.dgenies.scale-d_i[3]/y_len*d3.dgenies.scale;let idy=d_i[4];let len=Math.sqrt(Math.pow(x2-x1,2)+Math.pow(y2-y1,2));if(len>min_size&&(max_size===null||len<max_size)&&Math.abs(idy)>=d3.dgenies.min_idy_draw){path.push(`M${x1} ${y1} L${x2} ${y2}`)}}return path.join(" ")};/**
 * Draw matches on dot plot for the given identity class
 *
 * @param {string} idy identity class of matches to draw
 * @param {object} lines matches definitions
 * @param {number} x_len total length of target
 * @param {number} y_len total length of query
 * @private
 */d3.dgenies.__draw_idy_lines=function(idy,lines,x_len,y_len){let min_sizes=d3.dgenies.min_sizes;for(let i=0;i<min_sizes.length;i++){let min_size=min_sizes[i];let max_size=i+1<min_sizes.length?min_sizes[i+1]:null;if(lines[idy].length>0){d3.dgenies.container.append("path").attr("d",d3.dgenies.__lineFunction(lines[idy],min_size,max_size,x_len,y_len)).attr("class","content-lines s_"+min_size.toString().replace(".","_")+" idy_"+idy).attr("stroke-width",d3.dgenies.content_lines_width+"px").attr("stroke",d3.dgenies.color_idy[d3.dgenies.color_idy_theme][idy]).attr("stroke-linecap",d3.dgenies.linecap)}}};/**
 * Switch to next color theme
 */d3.dgenies.switch_color_theme=function(){if(!d3.dgenies.all_disabled){let current_theme=d3.dgenies.color_idy_theme;let idx=d3.dgenies.color_idy_themes.indexOf(current_theme);if(idx<d3.dgenies.color_idy_themes.length-1){idx++}else{idx=0}d3.dgenies.change_color_theme(d3.dgenies.color_idy_themes[idx])}};/**
 * Change color theme to the given one
 *
 * @param {string} theme theme name
 */d3.dgenies.change_color_theme=function(theme){if(d3.dgenies.color_idy_themes.indexOf(theme)===-1){throw"Theme not valid!"}for(let idy=0;idy<4;idy++){d3.dgenies.color_idy_theme=theme;d3.dgenies.container.selectAll("path.idy_"+idy.toString()).attr("stroke",d3.dgenies.color_idy[d3.dgenies.color_idy_theme][idy])}d3.dgenies.draw_legend()};/**
 * Draw matches on dot plot
 *
 * @param {object} lines matches definition
 * @param {number} x_len total len of target
 * @param {number} y_len total len of query
 */d3.dgenies.draw_lines=function(lines=d3.dgenies.lines,x_len=d3.dgenies.x_len,y_len=d3.dgenies.y_len){//Remove old lines (if any):
$("path.content-lines").remove();//lines = lines.sort(d3.dgenies._sort_lines);
for(let i=0;i<4;i++){d3.dgenies.__draw_idy_lines(i.toString(),lines,x_len,y_len)}d3.dgenies.events.filter_size(d3.dgenies.min_size)};/**
 * Draw dot plot
 *
 * @param {object} x_contigs length associated to each contig of the query
 * @param {array} x_order order of query contigs
 * @param {object} y_contigs length associated to each chromosome of the target
 * @param {array} y_order order of target chromosomes
 */d3.dgenies.draw=function(x_contigs,x_order,y_contigs,y_order){let width=850;let height=850;$("div#draw").width(width).height(height);let draw=$("#draw");draw.empty();draw.append($("<div>").attr("id","restore-all").css("display","none").attr("title","Unzoom"));let draw_in=draw.append($("<div>").attr("id","draw-in"));d3.dgenies.svgsupercontainer=d3.select("#draw-in").append("svg:svg").attr("width","100%").attr("height","100%").attr("viewBox","0 0 100 100").attr("preserveAspectRatio","none");let drawcontainer=d3.dgenies.svgsupercontainer.append("svg:g").attr("class","drawcontainer");drawcontainer.append("rect").attr("x",0).attr("y",0).attr("width","100%").attr("height","100%").attr("stroke","none").attr("fill","white");d3.dgenies.svgcontainer=drawcontainer.append("svg:svg").attr("class","svgcontainer").attr("width",90).attr("height",90).attr("x",5).attr("y",5).attr("viewBox","0 0 "+d3.dgenies.scale+" "+d3.dgenies.scale).attr("preserveAspectRatio","none");d3.dgenies.container=d3.dgenies.svgcontainer.append("svg:g").attr("class","container");d3.dgenies.container.append("rect").attr("x",0).attr("y",0).attr("width","100%").attr("height","100%").attr("stroke","none").attr("fill","white");//X axis:
d3.dgenies.x_zones={};let sum=0;for(let i=0;i<x_order.length-1;i++){let x_id=x_order[i];let x_contig_len=x_contigs[x_id]/d3.dgenies.x_len*d3.dgenies.scale;d3.dgenies.x_zones[x_id]=[sum,sum+x_contig_len];sum+=x_contig_len;d3.dgenies.container.append("line").attr("x1",sum).attr("y1",d3.dgenies.scale).attr("x2",sum).attr("y2",0).attr("class","break-lines").attr("stroke-width",d3.dgenies.break_lines_width).attr("stroke",d3.dgenies.break_lines_color).style("stroke-dasharray",d3.dgenies.break_lines_dash)}d3.dgenies.x_zones[x_order[x_order.length-1]]=[sum,d3.dgenies.scale];//Y axis:
d3.dgenies.y_zones={};sum=0;for(let i=0;i<y_order.length-1;i++){let y_id=y_order[i];let y_contig_len=y_contigs[y_id]/d3.dgenies.y_len*d3.dgenies.scale;d3.dgenies.y_zones[y_id]=[sum,sum+y_contig_len];sum+=y_contig_len;d3.dgenies.container.append("line").attr("x1",0).attr("y1",d3.dgenies.scale-sum).attr("x2",d3.dgenies.scale).attr("y2",d3.dgenies.scale-sum).attr("class","break-lines").attr("stroke-width",d3.dgenies.break_lines_width).attr("stroke",d3.dgenies.break_lines_color).style("stroke-dasharray",d3.dgenies.break_lines_dash)}d3.dgenies.y_zones[y_order[y_order.length-1]]=[sum,d3.dgenies.scale];if(!d3.dgenies.break_lines_show){d3.selectAll("line.break-lines").style("visibility","hidden")}d3.dgenies.draw_axis_bckgd();d3.dgenies.draw_left_axis(d3.dgenies.y_len);d3.dgenies.draw_bottom_axis(d3.dgenies.x_len);d3.dgenies.draw_top_axis(d3.dgenies.x_zones);d3.dgenies.draw_right_axis(d3.dgenies.y_zones);window.setTimeout(()=>{//Data:
d3.dgenies.draw_lines();$("#restore-all").click(function(){if(d3.dgenies.zoom.reset_scale(false,null,false)){$(this).hide()}});$(document).on("keyup",function(e){if(e.keyCode===27){if(d3.dgenies.zoom.reset_scale(false,null,false)){$("#restore-all").hide()}}});d3.dgenies.draw_legend();dgenies.hide_loading()},0);draw.append($("<div>").attr("id","help-zoom").append("Press CTRL to zoom").append($("<img>").attr("src",d3.dgenies.help_zoom).attr("alt","")).hide().on("click",function(){$(this).hide()}));draw.append($("<div>").attr("id","help-trans").append("Press CTRL to translate").append($("<img>").attr("src",d3.dgenies.help_trans).attr("alt","")).hide().on("click",function(){$(this).hide()}).on("mouseup",function(){d3.dgenies.translate_start=null;$("#help-trans").fadeOut("slow")}));d3.dgenies.zoom.init();d3.dgenies.events.init_context_menu()};
if(!d3||!d3.dgenies){throw"d3.dgenies wasn't included!"}d3.dgenies.events={};d3.dgenies.events.context_menu={actions:[{name:"Export SVG",onClick:dgenies.result.export.export_svg},{name:"Export PNG",onClick:dgenies.result.export.export_png},{name:"Reverse query",isShown:function(){return d3.dgenies.name_x!==d3.dgenies.name_y},onClick:dgenies.result.controls.launch_reverse_contig}]};/**
 * Initialise events
 */d3.dgenies.events.init=function(){$("input#filter_size").change(function(){d3.dgenies.events.filter_size(d3.dgenies.min_sizes[this.value])});$("input#stroke-linecap").change(function(){d3.dgenies.events.stroke_linecap(!this.checked)});$("input#stroke-width").change(function(){d3.dgenies.events.stroke_width(this.value)});$("input#filter_identity").change(function(){d3.dgenies.events.filter_identity(this.value)});$("input#chroms-limits").change(function(){d3.dgenies.events.set_break_lines_visibility(this.value)});$("div#legend div.draw").on("click",d3.dgenies.switch_color_theme)};/**
 * Initialise context menu
 */d3.dgenies.events.init_context_menu=function(){d3.dgenies.svgcontainer.on("mousedown",function(){let event=d3.event;let rect=$("g.container")[0].getBoundingClientRect();let posY=rect.top+window.scrollY,height_c=rect.height;let y=d3.dgenies.scale-(event.pageY-posY)/height_c*d3.dgenies.scale;d3.dgenies.query_selected=d3.dgenies.select_query(y)});let menu=new BootstrapMenu("svg.svgcontainer",d3.dgenies.events.context_menu)};/**
 * Set break lines visibility: color and thickness, or hidden
 *
 * @param {string} value: visibility value: "0"-> hidden to "5" -> max visibility value
 */d3.dgenies.events.set_break_lines_visibility=function(value){if(value==="0"){d3.dgenies.break_lines_show=false;d3.dgenies.break_lines_dash="3, 3"}else if(value==="1"){d3.dgenies.break_lines_show=true;d3.dgenies.break_lines_width=d3.dgenies.scale/2000;d3.dgenies.break_lines_color="#bfbfbf";d3.dgenies.break_lines_dash="3, 3"}else if(value==="2"){d3.dgenies.break_lines_show=true;d3.dgenies.break_lines_width=d3.dgenies.scale/1500;d3.dgenies.break_lines_color="#7c7c7c";d3.dgenies.break_lines_dash="3, 3"}else if(value==="3"){d3.dgenies.break_lines_show=true;d3.dgenies.break_lines_width=d3.dgenies.scale/1000;d3.dgenies.break_lines_color="#424242";d3.dgenies.break_lines_dash="3, 3"}else if(value==="4"){d3.dgenies.break_lines_show=true;d3.dgenies.break_lines_width=d3.dgenies.scale/800;d3.dgenies.break_lines_color="#2b2b2b";d3.dgenies.break_lines_dash="3, 3"}else if(value==="5"){d3.dgenies.break_lines_show=true;d3.dgenies.break_lines_width=d3.dgenies.scale/600;d3.dgenies.break_lines_color="#000000";d3.dgenies.break_lines_dash="none"}if(d3.dgenies.break_lines_show){d3.selectAll("line.break-lines").style("visibility","visible");d3.selectAll("line.break-lines").attr("stroke-width",d3.dgenies.break_lines_width/d3.dgenies.zoom_scale_lines);d3.selectAll("line.break-lines").attr("stroke",d3.dgenies.break_lines_color);d3.selectAll("line.break-lines").style("stroke-dasharray",d3.dgenies.break_lines_dash)}else{d3.selectAll("line.break-lines").style("visibility","hidden")}};/**
 * Remove too small matches
 *
 * @param {number} min_size minimum size. Beside it, hide matches
 */d3.dgenies.events.filter_size=function(min_size){for(let i=0;i<d3.dgenies.min_sizes.length;i++){let size=d3.dgenies.min_sizes[i];if(size<min_size){$("path.content-lines.s_"+size.toString().replace(".","_")).hide()}else{$("path.content-lines.s_"+size.toString().replace(".","_")).show()}}d3.dgenies.min_size=min_size};/**
 * Remove low identity matches
 *
 * @param {number} min_idy minimum of identity. Beside it, hide matches
 */d3.dgenies.events.filter_identity=function(min_idy){d3.dgenies.min_idy_draw=min_idy;dgenies.show_loading();window.setTimeout(()=>{d3.dgenies.draw_lines();d3.selectAll("path.content-lines").attr("stroke-width",d3.dgenies.content_lines_width/d3.dgenies.zoom_scale_lines);d3.dgenies.events.filter_size(d3.dgenies.min_size);dgenies.hide_loading()},0)};/**
 * If stroke precision checked, strole-linecap is set to "butt". Else "round" to improve visibility of matches
 *
 * @param {boolean} rounded if true, improve bisibility by add round cap to lines
 */d3.dgenies.events.stroke_linecap=function(rounded){d3.dgenies.linecap=rounded?"round":"butt";$("path").attr("stroke-linecap",d3.dgenies.linecap)};/**
 * Change matches lines stroke width
 *
 * @param {string} width new width class ("1", "2", or "3")
 */d3.dgenies.events.stroke_width=function(width){let stroke_width=d3.dgenies.scale/600;if(width==="1"){stroke_width=d3.dgenies.scale/400}else if(width==="2"){stroke_width=d3.dgenies.scale/200}else if(width==="3"){stroke_width=d3.dgenies.scale/100}d3.dgenies.content_lines_width=stroke_width;d3.selectAll("path.content-lines").attr("stroke-width",stroke_width/d3.dgenies.zoom_scale_lines)};
if(!d3||!d3.dgenies){throw"d3.dgenies wasn't included!"}d3.dgenies.mousetip={};/**
 * Get color (black/white) depending on bgColor so it would be clearly seen.
 *
 * @param bgColor
 * @returns {string}
 */d3.dgenies.mousetip.getColorByBgColor=function(bgColor){if(!bgColor){return""}return parseInt(bgColor.replace("#",""),16)>16777215/2?"#000":"#fff"};/**
 * Mouse tip basis
 *
 * @param my_tip
 * @param relative_to
 * @param {int} x
 * @param {int} y
 */$.fn.mousetip=function(my_tip,relative_to=null,x=20,y=20){let $this=$(this);let tip=relative_to===null?$(my_tip,this):$(my_tip,relative_to);let hidden=true;$this.hover(function(e){if(!e.ctrlKey){tip.show();hidden=false}},function(){hidden=true;tip.hide().removeAttr("style")}).mousemove(function(e){tip.hide();window.setTimeout(()=>{let rect=relative_to===null?this.getBoundingClientRect():$(relative_to)[0].getBoundingClientRect();let posX=rect.left+window.scrollX,posY=rect.top+window.scrollY,m_x=e.pageX-rect.left-window.scrollX,m_y=e.pageY-rect.top-window.scrollY;let mouseX=m_x+x;let mouseY=m_y+y;let rect_g=$("g.container")[0].getBoundingClientRect();let posX_g=rect_g.left+window.scrollX,posY_g=rect_g.top+window.scrollY,width_c=rect_g.width,height_c=rect_g.height;let x_g=(e.pageX-posX_g)/width_c*d3.dgenies.scale,y_g=d3.dgenies.scale-(e.pageY-posY_g)/height_c*d3.dgenies.scale;let match=d3.dgenies.mousetip.get_match(e);let x_zone="unknown";for(let zone in d3.dgenies.x_zones){if(d3.dgenies.x_zones[zone][0]<x_g&&x_g<=d3.dgenies.x_zones[zone][1]){x_zone=d3.dgenies.mousetip.get_label(zone);break}}let y_zone="unknown";for(let zone in d3.dgenies.y_zones){if(d3.dgenies.y_zones[zone][0]<y_g&&y_g<=d3.dgenies.y_zones[zone][1]){y_zone=d3.dgenies.mousetip.get_label(zone);break}}let html="";if(match!==null){html=`<strong>Query:</strong> ${match.y_zone}<br/>(${match.y_match[0]} - ${match.y_match[1]})<br/>
                            <strong>Target:</strong> ${match.x_zone}<br/>(${match.x_match[0]} - ${match.x_match[1]})<br/>
                            <strong>Identity:</strong> ${Math.round(match.idy*100)/100}`}else{html=`<table class="drawtooltip">
                        <tr>
                            <td class="tt-label">Query:</td><td>${y_zone}</td>
                        </tr>
                        <tr>
                            <td class="tt-label">Target:</td><td>${x_zone}</td>
                        </tr>
                        </table>`}tip.html(html);let css={top:mouseY,left:mouseX};if(match===null){css.color="#000";css.background="#ededed"}else{let idy_class="";if(match.idy>=0.75){idy_class="3"}else if(match.idy>=0.5){idy_class="2"}else if(match.idy>=0.25){idy_class="1"}else if(match.idy>=0){idy_class="0"}else{idy_class="-1"}css.background=d3.dgenies.color_idy[d3.dgenies.color_idy_theme][idy_class];css.color=d3.dgenies.mousetip.getColorByBgColor(css.background)}if(!hidden&&(!e.ctrlKey&&!d3.dgenies.zone_selected||match!==null)){tip.show().css(css)}},0)})};/**
 * Initialise tooltip
 */d3.dgenies.mousetip.init=function(){$("#draw").append($("<span>").attr("class","tip"));$("g.container").mousetip(".tip","#draw")};/**
 * Hide tooltip
 */d3.dgenies.mousetip.hide=function(){$(".tip","#draw").hide()};/**
 * get label to show
 *
 * @param {string} label initial label
 * @returns {string} new label
 */d3.dgenies.mousetip.get_label=function(label){if(label.startsWith("###MIX###")){let parts=label.substr(10).split("###");label="Mix:&nbsp;"+parts.slice(0,3).join(",&nbsp;");if(parts.length>3){label+=",&nbsp;..."}}return label};/**
 * Get match override by mouse cursor
 *
 * @param e mouse event
 * @returns {{x_zone: string, y_zone: string, x_match: float[], y_match: float[], idy: float}}
 */d3.dgenies.mousetip.get_match=function(e){let rect=$("g.container")[0].getBoundingClientRect();let posX=rect.left+window.scrollX,posY=rect.top+window.scrollY,width_c=rect.width,height_c=rect.height;let c_x=(e.pageX-posX)/width_c*d3.dgenies.scale,c_y=d3.dgenies.scale-(e.pageY-posY)/height_c*d3.dgenies.scale;c_x=c_x/d3.dgenies.scale*d3.dgenies.x_len;c_y=c_y/d3.dgenies.scale*d3.dgenies.y_len;let error_x=d3.dgenies.content_lines_width/d3.dgenies.scale*d3.dgenies.x_len;let error_y=d3.dgenies.content_lines_width/d3.dgenies.scale*d3.dgenies.y_len;// let error_x = 0,
//     error_y = 0;
let match=null;let found=false;for(let i=3;i>=0;i--){let j=0;while(!found&&j<d3.dgenies.lines[i].length){let line=d3.dgenies.lines[i][j];let x_a=Math.min(line[0],line[1]);let x_b=Math.max(line[0],line[1]);let y_a=Math.min(line[2],line[3]);let y_b=Math.max(line[2],line[3]);if(x_a<=c_x&&c_x<=x_b&&y_a<=c_y&&c_y<=y_b){let m=(y_b-y_a)/(x_b-x_a);let p=y_a-m*x_a;let y_xmouse=m*c_x+p;if(y_xmouse-error_y<=c_y&&c_y<=y_xmouse+error_y){match=line;found=true}}j++}}if(match!==null){let y_zone=match[5];let x_zone=match[6];let y_min=null;let y_max=null;if(y_zone in d3.dgenies.y_zones){let cy_min=d3.dgenies.y_zones[y_zone][0]/d3.dgenies.scale*d3.dgenies.y_len;y_min=d3.dgenies.get_human_readable_size(match[2]-cy_min,3,"&nbsp;");y_max=d3.dgenies.get_human_readable_size(match[3]-cy_min,3,"&nbsp;")}let x_min=null;let x_max=null;if(x_zone in d3.dgenies.x_zones){let cx_min=d3.dgenies.x_zones[x_zone][0]/d3.dgenies.scale*d3.dgenies.x_len;x_min=d3.dgenies.get_human_readable_size(match[0]-cx_min,3,"&nbsp;");x_max=d3.dgenies.get_human_readable_size(match[1]-cx_min,3,"&nbsp;")}return{x_zone:x_zone,y_zone:y_zone,x_match:[x_min,x_max],y_match:[y_min,y_max],idy:match[4]}}return null};
if(!d3||!d3.dgenies){throw"d3.dgenies wasn't included!"}d3.dgenies.zoom={};d3.dgenies.zoom.help_timeout=null;/**
 * Initialize zoom.init module
 */d3.dgenies.zoom.init=function(){d3.dgenies.svgcontainer.on("click",d3.dgenies.zoom.click);d3.select(".drawcontainer").on("mousedown",d3.dgenies.zoom.mousedown).on("mouseup",d3.dgenies.zoom.mouseup).on("mousemove",d3.dgenies.zoom.translate);d3.dgenies.svgcontainer.on("wheel",d3.dgenies.zoom.zoom)};/**
 * Click event action
 */d3.dgenies.zoom.click=function(){if(!d3.event.ctrlKey&&!d3.dgenies.all_disabled){let cursor=d3.dgenies.zoom._cursor_pos();d3.dgenies.select_zone(cursor[0],cursor[1])}};/**
 * Mousedown event action
 */d3.dgenies.zoom.mousedown=function(){if(d3.dgenies.zoom_enabled){d3.dgenies.mousetip.hide();let rect=$("g.container")[0].getBoundingClientRect();let posX=rect.left+window.scrollX,posY=rect.top+window.scrollY,width_c=rect.width,height_c=rect.height;let cursor_x=(d3.event.pageX-posX)/width_c*d3.dgenies.scale,cursor_y=(d3.event.pageY-posY)/height_c*d3.dgenies.scale;d3.dgenies.translate_start=[cursor_x,cursor_y];d3.dgenies.posX=posX;d3.dgenies.posY=posY;let old_transform=d3.dgenies.container.attr("transform");d3.dgenies.old_translate=[0,0];if(old_transform!==null){let search_tr=old_transform.match(/translate\(([-\d.]+),\s*([-\d.]+)\)/);d3.dgenies.old_translate=[parseFloat(search_tr[1]),parseFloat(search_tr[2])]}}};/**
 * Mouseup event action
 */d3.dgenies.zoom.mouseup=function(){d3.dgenies.translate_start=null;$("#help-trans").fadeOut("slow")};/**
 * Translate event action
 */d3.dgenies.zoom.translate=function(){let rect=$("g.container")[0].getBoundingClientRect();let posX=d3.dgenies.posX,posY=d3.dgenies.posY,width_c=rect.width,height_c=rect.height;let cursor_x=(d3.event.pageX-posX)/width_c*d3.dgenies.scale,cursor_y=(d3.event.pageY-posY)/height_c*d3.dgenies.scale;if(d3.dgenies.translate_start!==null&&d3.event.ctrlKey){let old_transform=d3.dgenies.container.attr("transform");//let scale = 1;
let scale_x=1;let scale_y=1;if(old_transform){let scale=old_transform.match(/scale\(([-\d.]+)(,\s*([-\d.]+))?\)/);scale_x=scale[1];scale_y=scale[1];if(scale[3]!==undefined)scale_y=scale[3]}let translate=[d3.dgenies.old_translate[0]+(cursor_x-d3.dgenies.translate_start[0])*scale_x,d3.dgenies.old_translate[1]+(cursor_y-d3.dgenies.translate_start[1])*scale_y];let min_tr=[d3.dgenies.scale-0.2*d3.dgenies.scale,d3.dgenies.scale-0.2*d3.dgenies.scale];let max_tr=[-d3.dgenies.scale*scale_x+200,-d3.dgenies.scale*scale_x+200];if(translate[0]<max_tr[0]){translate[0]=max_tr[0]}else if(translate[0]>min_tr[0]){translate[0]=min_tr[0]}if(translate[1]<max_tr[1]){translate[1]=max_tr[1]}else if(translate[1]>min_tr[1]){translate[1]=min_tr[1]}let new_transform=`translate(${translate[0]}, ${translate[1]}) scale(${scale_x}, ${scale_y})`;d3.dgenies.container.attr("transform",new_transform);if(translate[0]!==0||translate[1]!==0){$("#restore-all").show()}else{$("#restore-all").hide()}//Update axis:
d3.dgenies.draw_top_axis();d3.dgenies.draw_right_axis();d3.dgenies.zoom_bottom_axis();d3.dgenies.zoom_left_axis()}else if(d3.dgenies.translate_start!==null){let help_trans=$("#help-trans");help_trans.fadeIn("slow")}};/**
 * Get cursor position
 *
 * @param {DOMRect} rect if given, dont get it from DOM
 * @returns {*[]} x and y position, plus the container rect object at third position
 * @private
 */d3.dgenies.zoom._cursor_pos=function(rect=null){let event=d3.event;if(rect===null){rect=$("g.container")[0].getBoundingClientRect()}let posX=rect.left+window.scrollX,posY=rect.top+window.scrollY,width_c=rect.width,height_c=rect.height;let x=(event.pageX-posX)/width_c*d3.dgenies.scale,y=d3.dgenies.scale-(event.pageY-posY)/height_c*d3.dgenies.scale;return[x,y,rect]};/**
 * Zoom staff
 */d3.dgenies.zoom.zoom=function(){if(d3.event.ctrlKey){d3.event.preventDefault();d3.dgenies.mousetip.hide();if(d3.dgenies.zoom_enabled){let cursor=d3.dgenies.zoom._cursor_pos();let zoom_f=1.2;let old_transform=d3.dgenies.container.attr("transform");if(old_transform!==null){let search_tr=old_transform.match(/translate\(([-\de.]+),\s*([-\de.]+)\)/);let search_sc=old_transform.match(/scale\(([-\de.]+)(,\s*[-\de.]+)?\)/);old_transform={"scale":parseFloat(search_sc[1]),"translate":[parseFloat(search_tr[1]),parseFloat(search_tr[2])]}}else{old_transform={"scale":1,"translate":[0,0]}}let new_scale;let new_rect=cursor[2];if(d3.event.deltaY<0){new_scale=old_transform["scale"]*zoom_f;new_rect["width"]*=zoom_f;new_rect["height"]*=zoom_f}else{new_scale=old_transform["scale"]/zoom_f;let scale_ratio=zoom_f;if(new_scale<1){new_scale=1;scale_ratio=old_transform["scale"]}new_rect["width"]/=scale_ratio;new_rect["height"]/=scale_ratio}new_rect["bottom"]=new_rect["y"]+new_rect["height"];new_rect["right"]=new_rect["x"]+new_rect["width"];let new_cursor=d3.dgenies.zoom._cursor_pos(new_rect);let x_trans=(new_cursor[0]-cursor[0])*new_scale;let y_trans=(new_cursor[1]-cursor[1])*new_scale;let translate_x=old_transform["translate"][0]+x_trans;let translate_y=old_transform["translate"][1]-y_trans;let new_transform=`translate(${translate_x},${translate_y}) scale(${new_scale})`;d3.dgenies.container.attr("transform",new_transform);d3.dgenies.zoom_scale_lines=new_scale;d3.dgenies.zoom._cursor_pos();//Correct lines stroke width to be not impacted by the zoom:
d3.selectAll("path.content-lines").attr("stroke-width",d3.dgenies.content_lines_width/new_scale);d3.selectAll("line.break-lines").attr("stroke-width",d3.dgenies.break_lines_width/new_scale);//Update axis:
d3.dgenies.draw_top_axis();d3.dgenies.draw_right_axis();d3.dgenies.zoom_bottom_axis();d3.dgenies.zoom_left_axis();if(translate_x<=0.00001&&translate_x>=-0.00001&&translate_y<=0.00001&&translate_y>=-0.00001&&new_scale===1){$("#restore-all").hide()}else{$("#restore-all").show()}}}else if(d3.dgenies.zoom_enabled){let help_zoom=$("#help-zoom");help_zoom.fadeIn("slow");if(d3.dgenies.zoom.help_timeout!==null){window.clearTimeout(d3.dgenies.zoom.help_timeout)}d3.dgenies.zoom.help_timeout=window.setTimeout(()=>{help_zoom.fadeOut("slow")},700)}};/**
 * Restore previous scale
 *
 * @param transform: transform object
 */d3.dgenies.zoom.restore_scale=function(transform){if(d3.dgenies.zone_selected){d3.dgenies.select_zone(null,null,d3.dgenies.zone_selected[0],d3.dgenies.zone_selected[1],true)}else{let scale_x=1;let scale_y=1;if(transform!==null){let search_sc=transform.match(/scale\(([-\de.]+)(,\s*[-\de.]+)?\)/);scale_x=search_sc[1];scale_y=search_sc[2]}else{transform="translate(0,0)scale(1,1)"}if(scale_y===undefined){scale_y=1000000}d3.dgenies.container.attr("transform",transform);d3.selectAll("path.content-lines").attr("stroke-width",d3.dgenies.content_lines_width/Math.min(scale_x,scale_y));if(d3.dgenies.break_lines_show){d3.selectAll("line.break-lines").style("visibility","visible");d3.selectAll("line.break-lines").attr("stroke-width",d3.dgenies.break_lines_width)}}};/**
 * Reset scale
 *
 * @param {boolean} temp if true, reset it temporarily
 * @param {function} after function to launch after staff
 * @param {boolean} force do it even if events are disabled
 * @returns {boolean} true if done, else false
 */d3.dgenies.zoom.reset_scale=function(temp=false,after=null,force=true){if(!d3.dgenies.all_disabled||force){dgenies.show_loading();window.setTimeout(()=>{//Reset scale:
d3.dgenies.container.attr("transform","scale(1,1)translate(0,0)");d3.dgenies.zoom_scale_lines=1;//Restore lines stroke width:
d3.selectAll("path.content-lines").attr("stroke-width",d3.dgenies.content_lines_width);if(d3.dgenies.break_lines_show){d3.selectAll("line.break-lines").style("visibility","visible");d3.selectAll("line.break-lines").attr("stroke-width",d3.dgenies.break_lines_width)}//Update left and bottom axis:
d3.dgenies.draw_left_axis(d3.dgenies.y_len);d3.dgenies.draw_bottom_axis(d3.dgenies.x_len);//Update top and right axis:
d3.dgenies.draw_top_axis();d3.dgenies.draw_right_axis();if(!temp)d3.dgenies.zone_selected=false;dgenies.hide_loading();//Re-enable zoom:
d3.dgenies.zoom_enabled=true;if(after!==null){after()}},0);return true}return false;//
// //Restore axis:
// d3.dgenies.draw_left_axis(d3.dgenies.y_len);
// d3.dgenies.draw_bottom_axis(d3.dgenies.x_len);
// d3.dgenies.draw_top_axis(d3.dgenies.x_zones);
// d3.dgenies.draw_right_axis(d3.dgenies.y_zones);
//
// d3.selectAll("line.content-lines").remove();
// d3.dgenies.draw_lines(d3.dgenies.lines, d3.dgenies.x_len, d3.dgenies.y_len);
// dgenies.show_loading();
// window.setTimeout(() => {
//     d3.select("g.container").html(d3.dgenies.full_pict);
//     dgenies.hide_loading();
// }, 0);
};
